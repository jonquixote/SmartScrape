{"data": {"entity_types": ["technology news article", "news article", "article"], "properties": ["title", "description", "url", "publication_date", "author", "category", "image_url", "image_alt_text", "article_body", "keywords"], "specific_criteria": {"section": "technology", "recency": "latest", "content_type": "news article", "keywords": ["technology", "new", "AI", "computing", "gadgets", "innovation"]}, "extraction_hints": {"structure": "BBC News uses a dynamic and complex structure.  Expect variation in article layouts.", "selectors": "Utilize CSS selectors based on common patterns like `.media__title`, `.media__summary`, `.story-body__main` but be prepared to adapt to different templates.", "date_handling": "BBC often uses relative dates (e.g., '1 hour ago').  Implement logic to convert these to absolute timestamps.", "section_identification": "Identify the 'Technology' section precisely.  The exact CSS class or URL segment might vary.", "pagination": "If multiple pages of technology news are available, implement pagination handling to scrape all relevant articles.", "dynamic_content": "Be aware of dynamically loaded content and implement strategies like using Selenium or Puppeteer to ensure all content is loaded before scraping.", "ads": "Be prepared to filter out advertisements or promotional content from the scraped data.", "category_identification": "Look for category tags or breadcrumbs within the article to further refine the entity type.", "author_extraction": "Author information might be in different formats (e.g., link to author page, text only). Handle both cases.", "article_body_extraction": "The main article body will be located under a specific CSS class, but it may have nested elements like images, videos, and embedded tweets. Consider how to extract the main text content while excluding these elements, or optionally extracting them as well."}}, "timestamp": 1746244918.40826, "context": null}